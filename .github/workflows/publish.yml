name: Publish
on: 
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true 
      - name: Fetch next version
        id: nextVersion
        uses: VisualPinball/next-version-action@v0.1.6
        with:
          tagPrefix: 'v'
      - name: Bump
        if: ${{ steps.nextVersion.outputs.isBump == 'true' }} 
        run: |
          npm version ${{ steps.nextVersion.outputs.nextVersion }} --no-git-tag-version    
      - name: Commit
        id: commit
        if: ${{ steps.nextVersion.outputs.isBump == 'true' }} 
        run: |
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "release: ${{ steps.nextVersion.outputs.nextTag }}."
          git push
          commitish=$(git rev-parse HEAD)
          echo ::set-output name=commitish::${commitish}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.nextVersion.outputs.nextTag }}
          release_name: ${{ steps.nextVersion.outputs.nextTag }}
          prerelease: ${{ steps.nextVersion.outputs.isPrerelease }}
          commitish: ${{ steps.commit.outputs.commitish }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Archive
        run: |
          echo "//registry.visualpinball.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          npm pack
          NPM_ARCHIVE=$(ls org.visualpinball.unity.assetlibrary*.tgz)
          mv $NPM_ARCHIVE $NPM_ARCHIVE-full
          rm -rf Assets
          npm pack
          OLD_SHA1=($(sha1sum $NPM_ARCHIVE))
          rm $NPM_ARCHIVE
          mv $NPM_ARCHIVE-full $NPM_ARCHIVE
          NEW_SHA1=($(sha1sum $NPM_ARCHIVE))
          echo SHA: $OLD_SHA1 -> $NEW_SHA1
          echo Publishing...
          npm publish          
          echo $REGISTRY_SSH_KEY > verdaccio.pem
          chmod 600 verdaccio.pem
          ls -l verdaccio.pem
          echo Getting package.json to patch...
          scp -v -i verdaccio.pem -o StrictHostKeyChecking=no $REGISTRY_SSH_USERNAME@registry.visualpinball.org:$REGISTRY_SSH_PATH/package.json package-registry.json
          cat package-registry.json
          sed -i 's/$OLD_SHA1/$NEW_SHA1/' package-registry.json
          cat package-registry.json
          scp -i verdaccio.pem -o StrictHostKeyChecking=no $NPM_ARCHIVE $REGISTRY_SSH_USERNAME@registry.visualpinball.org:$REGISTRY_SSH_PATH
          scp -i verdaccio.pem -o StrictHostKeyChecking=no package-registry.json $REGISTRY_SSH_USERNAME@registry.visualpinball.org:$REGISTRY_SSH_PATH/package.json 
          rm verdaccio.pem
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          REGISTRY_SSH_KEY: ${{ secrets.REGISTRY_SSH_KEY }}
          REGISTRY_SSH_USERNAME: ${{ secrets.REGISTRY_SSH_USERNAME }}
          REGISTRY_SSH_PATH: ${{ secrets.REGISTRY_SSH_PATH }}